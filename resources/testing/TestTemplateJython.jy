from com.xebialabs.xlrelease.api.v1.forms import Variable
from testing import *

# Approach where the tempalte to be tested is copied into the current release
# XXX Abandoning this for now in favor of MockReleaseAndStart that uses the
# CreateReleaseTask to create a new release and then modifies it

baseTemplate = releaseApi.searchReleasesByTitle(templateName)[0]
referenceRelease = releaseApi.getRelease(releaseId)



#
# Script
#

# Reference list of previously run tasks, as a flat list for simpler lookup
allTasks = find_all_tasks(referenceRelease)
taskIndex = 0

# Copy variables.
# XXX Make this work
for variable in releaseApi.getVariables(referenceRelease.id):
  # print "type: %s; contents: %s" % (type(variable), variable)
  formVar = Variable(variable.type.toString(), variable.key, variable.getValue(), variable.requiresValue)
  releaseApi.createVariable(release.id, formVar)

# Copy template into this release and replace certain tasks with mocks
for phase in baseTemplate.phases:
  print "PHASE" + phase.title
  addedPhase = phaseApi.addPhase(release.id, phase)
  for task in phase.tasks:

    if task.type.toString() == mockType:

      print_code("Output properties in {0}".format(task.title), get_output_properties(task))
      print_code("Variables in {0}".format(task.title), task.variableMapping)

      mockTask = taskApi.newTask('xlrelease.ScriptTask')
      mockTask.title = "MOCK " + task.title
      original, taskIndex = find_task_by_type(allTasks, mockType, taskIndex)
      mockTask.script = create_mock_script(task, original)
      taskApi.addTask(addedPhase.id, mockTask)
    else:
      taskApi.addTask(addedPhase.id, task)